{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Balwant singh\\\\Desktop\\\\FlipkartClone\\\\projfrontend\\\\components\\\\ProductDescriptionComponents\\\\ProductCarousel.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ProductCarouselItem from \"./ProductCarouselItem\";\nimport HeaderIcon from \"../HeaderIcon\";\nimport Icon from \"../Icon\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nfunction infiniteScroll(dataList) {\n  var numberOfData = dataList.length;\n  var scrollValue = 0,\n      scrolled = 0;\n  flag = 0;\n  setInterval(function () {\n    if (scrolled == 0) flag = 0;\n    if (scrolled == numberOfData - 1) flag = 1;\n\n    if (flag === 0 && scrolled < numberOfData - 1) {\n      scrollValue = scrollValue + width;\n      scrolled++;\n    } else {\n      scrollValue = scrollValue - width;\n      scrolled--;\n    }\n\n    this.flatList.scrollToOffset({\n      animated: true,\n      offset: scrollValue\n    });\n  }, 3000);\n}\n\nvar ProductCarousel = function ProductCarousel(_ref) {\n  var data = _ref.data;\n  var scrollX = new Animated.Value(0);\n  var position = Animated.divide(scrollX, width);\n\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataList = _useState2[0],\n      setDataList = _useState2[1];\n\n  useEffect(function () {\n    setDataList(data);\n    infiniteScroll(dataList);\n  });\n\n  if (data && data.length) {\n    return React.createElement(View, {\n      style: styles.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(StatusBar, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), React.createElement(FlatList, {\n      data: data,\n      ref: function ref(flatList) {\n        _this.flatList = flatList;\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return 'key' + index;\n      },\n      horizontal: true,\n      pagingEnabled: true,\n      scrollEnabled: true,\n      snapToAlignment: \"center\",\n      scrollEventThrottle: 16,\n      showsHorizontalScrollIndicator: false,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(ProductCarouselItem, {\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 32\n          }\n        });\n      },\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            x: scrollX\n          }\n        }\n      }]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: styles.nav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: \"arrow-left\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: styles.navend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: \"shopping-cart\",\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: styles.wishlist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      align: \"rightbottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: styles.dotView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, data.map(function (_, i) {\n      var opacity = position.interpolate({\n        inputRange: [i - 1, i, i + 1],\n        outputRange: [0.3, 1, 0.3],\n        extrapolate: 'clamp'\n      });\n      return React.createElement(Animated.View, {\n        key: i,\n        style: {\n          opacity: opacity,\n          height: 10,\n          width: 10,\n          backgroundColor: 'orange',\n          margin: 8,\n          borderRadius: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      });\n    })));\n  }\n\n  console.log('Please provide Images');\n  return null;\n};\n\nvar styles = StyleSheet.create({\n  body: {\n    height: height / 2,\n    marginBottom: 4\n  },\n  dotView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: -35\n  },\n  text: {\n    fontFamily: 'popins-med',\n    fontSize: 20,\n    color: '#20263e'\n  },\n  nav: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  wishlist: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0\n  },\n  navend: {\n    position: 'absolute',\n    top: 0,\n    justifyContent: 'flex-end',\n    width: '100%',\n    flexDirection: 'row'\n  }\n});\nexport default ProductCarousel;","map":{"version":3,"sources":["C:/Users/Balwant singh/Desktop/FlipkartClone/projfrontend/components/ProductDescriptionComponents/ProductCarousel.js"],"names":["React","useState","useEffect","ProductCarouselItem","HeaderIcon","Icon","Dimensions","get","width","height","infiniteScroll","dataList","numberOfData","length","scrollValue","scrolled","flag","setInterval","flatList","scrollToOffset","animated","offset","ProductCarousel","data","scrollX","Animated","Value","position","divide","setDataList","styles","body","item","index","event","nativeEvent","contentOffset","x","nav","navend","wishlist","dotView","map","_","i","opacity","interpolate","inputRange","outputRange","extrapolate","backgroundColor","margin","borderRadius","console","log","StyleSheet","create","marginBottom","flexDirection","justifyContent","marginTop","text","fontFamily","fontSize","color","top","bottom","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Dimensions,\r\n    FlatList,\r\n    Animated,\r\n    StatusBar,\r\n} from 'react-native';\r\nimport ProductCarouselItem from './ProductCarouselItem';\r\nimport HeaderIcon from '../HeaderIcon';\r\nimport Icon from '../Icon';\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nfunction infiniteScroll(dataList) {\r\n    const numberOfData = dataList.length;\r\n    let scrollValue = 0,\r\n        scrolled = 0;\r\n    flag = 0;\r\n\r\n    setInterval(function () {\r\n        if (scrolled == 0) flag = 0;\r\n        if (scrolled == numberOfData - 1) flag = 1;\r\n        if (flag === 0 && scrolled < numberOfData - 1) {\r\n            scrollValue = scrollValue + width;\r\n            scrolled++;\r\n        } else {\r\n            scrollValue = scrollValue - width;\r\n            scrolled--;\r\n        }\r\n\r\n        this.flatList.scrollToOffset({ animated: true, offset: scrollValue });\r\n    }, 3000);\r\n}\r\n\r\nconst ProductCarousel = ({ data }) => {\r\n    const scrollX = new Animated.Value(0);\r\n    let position = Animated.divide(scrollX, width);\r\n    const [dataList, setDataList] = useState(data);\r\n\r\n    useEffect(() => {\r\n        setDataList(data);\r\n        infiniteScroll(dataList);\r\n    });\r\n\r\n    if (data && data.length) {\r\n        return (\r\n            <View style={styles.body}>\r\n                <StatusBar hidden />\r\n\r\n                <FlatList\r\n                    data={data}\r\n                    ref={(flatList) => {\r\n                        this.flatList = flatList;\r\n                    }}\r\n                    keyExtractor={(item, index) => 'key' + index}\r\n                    horizontal\r\n                    pagingEnabled\r\n                    scrollEnabled\r\n                    snapToAlignment='center'\r\n                    scrollEventThrottle={16}\r\n                    showsHorizontalScrollIndicator={false}\r\n                    renderItem={({ item }) => {\r\n                        return <ProductCarouselItem item={item} />;\r\n                    }}\r\n                    onScroll={Animated.event([\r\n                        { nativeEvent: { contentOffset: { x: scrollX } } },\r\n                    ])}\r\n                />\r\n\r\n                <View style={styles.nav}>\r\n                    <Icon name='arrow-left' align='left' />\r\n                </View>\r\n                <View style={styles.navend}>\r\n                    <Icon name='shopping-cart' align='right' />\r\n                </View>\r\n                <View style={styles.wishlist}>\r\n                    <Icon name='heart' align='rightbottom' />\r\n                </View>\r\n                <View style={styles.dotView}>\r\n                    {data.map((_, i) => {\r\n                        let opacity = position.interpolate({\r\n                            inputRange: [i - 1, i, i + 1],\r\n                            outputRange: [0.3, 1, 0.3],\r\n                            extrapolate: 'clamp',\r\n                        });\r\n                        return (\r\n                            <Animated.View\r\n                                key={i}\r\n                                style={{\r\n                                    opacity,\r\n                                    height: 10,\r\n                                    width: 10,\r\n                                    backgroundColor: 'orange',\r\n                                    margin: 8,\r\n                                    borderRadius: 5,\r\n                                }}\r\n                            />\r\n                        );\r\n                    })}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    console.log('Please provide Images');\r\n    return null;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    body: { height: height / 2, marginBottom: 4 },\r\n    dotView: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        marginTop: -35,\r\n    },\r\n\r\n    text: {\r\n        fontFamily: 'popins-med',\r\n        fontSize: 20,\r\n        color: '#20263e',\r\n    },\r\n    nav: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        width: '100%',\r\n    },\r\n    wishlist: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0,\r\n    },\r\n    navend: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        justifyContent: 'flex-end',\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n    },\r\n});\r\n\r\nexport default ProductCarousel;\r\n"]},"metadata":{},"sourceType":"module"}