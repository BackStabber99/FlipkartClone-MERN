{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Balwant singh\\\\Desktop\\\\FlipkartClone\\\\projfrontend\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport Home from \"./Screens/Home\";\nimport Categories from \"./components/Categories\";\nimport ProductDescScreen from \"./Screens/ProductDescScreen\";\nexport default function App() {\n  var getFonts = function getFonts() {\n    return Font.loadAsync({\n      'popins-reg': require(\"./assets/fonts/Poppins-Regular.ttf\"),\n      'popins-med': require(\"./assets/fonts/Poppins-Medium.ttf\"),\n      'popins-bold': require(\"./assets/fonts/Poppins-Bold.ttf\"),\n      'popins-semibold': require(\"./assets/fonts/Poppins-SemiBold.ttf\")\n    });\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Balwant singh/Desktop/FlipkartClone/projfrontend/App.js"],"names":["React","useState","Font","AppLoading","HomeScreen","Home","Categories","ProductDescScreen","App","getFonts","loadAsync","require","fontsLoaded","setFontsLoaded","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,UAAP;AACA,OAAOC,iBAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC1B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,WAAOP,IAAI,CAACQ,SAAL,CAAe;AAClB,oBAAcC,OAAO,sCADH;AAElB,oBAAcA,OAAO,qCAFH;AAGlB,qBAAeA,OAAO,mCAHJ;AAIlB,yBAAmBA,OAAO;AAJR,KAAf,CAAP;AAMH,GAPD;;AAD0B,kBAUYV,QAAQ,CAAC,KAAD,CAVpB;AAAA;AAAA,MAUnBW,WAVmB;AAAA,MAUNC,cAVM;;AAY1B,MAAID,WAAJ,EAAiB;AACb,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO;AACH,WACI,oBAAC,UAAD;AACI,MAAA,UAAU,EAAEH,QADhB;AAEI,MAAA,QAAQ,EAAE;AAAA,eAAMI,cAAc,CAAC,IAAD,CAApB;AAAA,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAMH;AACJ;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport * as Font from 'expo-font';\r\nimport { AppLoading } from 'expo';\r\nimport HomeScreen from './Screens/HomeScreen';\r\nimport Home from './Screens/Home';\r\nimport Categories from './components/Categories';\r\nimport ProductDescScreen from './Screens/ProductDescScreen';\r\n\r\nexport default function App() {\r\n    const getFonts = () => {\r\n        return Font.loadAsync({\r\n            'popins-reg': require('./assets/fonts/Poppins-Regular.ttf'),\r\n            'popins-med': require('./assets/fonts/Poppins-Medium.ttf'),\r\n            'popins-bold': require('./assets/fonts/Poppins-Bold.ttf'),\r\n            'popins-semibold': require('./assets/fonts/Poppins-SemiBold.ttf'),\r\n        });\r\n    };\r\n\r\n    const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n    if (fontsLoaded) {\r\n        return <Home />;\r\n    } else {\r\n        return (\r\n            <AppLoading\r\n                startAsync={getFonts}\r\n                onFinish={() => setFontsLoaded(true)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}